package gov.nasa.jpf.jdart.security;

/*Generated by MPS */

import gov.nasa.jpf.constraints.api.Variable;
import gov.nasa.jpf.constraints.types.Type;

public class TaintedVariable<T> extends Variable<T> {

  public boolean isWeakRandomnessTainted = false;
  public boolean isCrossSiteScriptingTainted = false;
  public boolean isSQLInjectionTainted = false;

  public TaintedVariable(Type<T> type, String name) {
    super(type, name);
  }
  public TaintedVariable(Type<T> type) {
    super(type);
  }

  public static void makeVariableWeakRandomnessIfTainted(Variable v) {
    if (v instanceof TaintedVariable) {
      ((TaintedVariable) v).isWeakRandomnessTainted = true;
    }
  }
  public static void makeVariableCrossSiteScriptingIfTainted(Variable v) {
    if (v instanceof TaintedVariable) {
      ((TaintedVariable) v).isCrossSiteScriptingTainted = true;
    }
  }
  public static void makeVariableSQLInjectionIfTainted(Variable v) {
    if (v instanceof TaintedVariable) {
      ((TaintedVariable) v).isSQLInjectionTainted = true;
    }
  }
}
